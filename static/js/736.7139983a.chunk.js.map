{"version":3,"file":"static/js/736.7139983a.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,gCAEXC,EAAW,mCAAG,WAAMC,GAAN,uFACKC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,GACzC,CACEK,OAAQF,EAAME,SAJA,cACZC,EADY,yBAOXA,GAPW,2CAAH,sDAUXC,EAAe,mCAAG,WAAOJ,EAAOK,GAAd,uFACCJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BQ,GACpD,CACEH,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfG,EAAe,mCAAG,WAAON,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACaV,GAClC,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfK,EAAe,mCAAG,WAAOR,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBV,GAC1C,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfM,EAAe,mCAAG,WAAOT,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBV,GAC1C,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,uD,2HC3CRO,E,QAAYC,GAAAA,IAAH,0C,SCwDtB,EAnDa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAqBR,OAnBAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAa5B,OAZAJ,GAAQ,IACRR,EAAAA,EAAAA,IAAgBW,EAAiBZ,GAC9Bc,MAAK,SAAAlB,GACJW,EAASX,EAASmB,KAAKC,MACvBP,GAAQ,EACT,IACAQ,OAAM,SAAAC,GACL,OAAOA,CACR,IACAC,SAAQ,WACPV,GAAQ,EACT,IACI,WACLG,EAAgBnB,OACjB,CACF,GAAE,CAACO,KAGF,SAACG,EAAD,UACGK,GACC,uCAEA,wBACGF,EAAMc,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWvB,EAAlC,EAAkCA,GAAlC,OACT,2BACE,gBACEwB,IACEH,EAAY,UApCT,oCAoCS,OACUA,GAClB,+FAENI,IAAKH,EACLI,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAE/B,uBAAIN,KACJ,uCAAeC,OAXRvB,EADA,OAmBpB,C","sources":["API/movieAPI.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bad873a72299f6199f58673bb9d2d11e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async abort => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getSearchMovies = async (abort, query) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieDetails = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieCredits = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieReviews = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../API/movieAPI';\nimport { Container } from './Cast.styled';\n\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst Cast = () => {\n  const [state, setState] = useState([]);\n  const [load, setload] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setload(true);\n    getMovieCredits(abortController, id)\n      .then(response => {\n        setState(response.data.cast);\n        setload(true);\n      })\n      .catch(error => {\n        return error;\n      })\n      .finally(() => {\n        setload(false);\n      });\n    return () => {\n      abortController.abort();\n    };\n  }, [id]);\n\n  return (\n    <Container>\n      {load ? (\n        <p>loading...</p>\n      ) : (\n        <ul>\n          {state.map(({ profile_path, name, character, id }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `${BASE_URL_IMG}${profile_path}`\n                    : 'https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg'\n                }\n                alt={name}\n                style={{ width: 100, height: 150 }}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","getTrending","abort","axios","signal","response","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Container","styled","useState","state","setState","load","setload","useParams","useEffect","abortController","AbortController","then","data","cast","catch","error","finally","map","profile_path","name","character","src","alt","style","width","height"],"sourceRoot":""}