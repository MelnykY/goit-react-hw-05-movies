{"version":3,"file":"static/js/415.05c4e401.chunk.js","mappings":"mTAEMA,EAAU,mCACVC,EAAW,gCAEXC,EAAW,mCAAG,WAAMC,GAAN,uFACKC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,GACzC,CACEK,OAAQF,EAAME,SAJA,cACZC,EADY,yBAOXA,GAPW,2CAAH,sDAUXC,EAAe,mCAAG,WAAOJ,EAAOK,GAAd,uFACCJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BQ,GACpD,CACEH,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfG,EAAe,mCAAG,WAAON,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,oBACaV,GAClC,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfK,EAAe,mCAAG,WAAOR,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBV,GAC1C,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,wDAUfM,EAAe,mCAAG,WAAOT,EAAOO,GAAd,uFACCN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBV,GAC1C,CACEK,OAAQF,EAAME,SAJI,cAChBC,EADgB,yBAOfA,GAPe,2CAAH,uD,qGC3CRO,EAAOC,EAAAA,GAAAA,GAAH,0CAGJC,EAAOD,EAAAA,GAAAA,GAAH,sB,SCsBjB,EAvBmB,SAAC,GAAoB,IAAlBE,EAAiB,EAAjBA,WACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAWG,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACd,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaZ,GAAMa,MAAO,CAAEC,KAAMP,GAA1C,gBACGG,QADH,IACGA,EAAAA,EAASC,KAFHX,EADG,KASrB,C,kFCyBD,UAtCa,WACX,OAAsCe,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwBF,EAAAA,EAAAA,WAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAa5B,OAZAH,GAAQ,IACR3B,EAAAA,EAAAA,IAAY6B,GACTE,MAAK,SAAA3B,GACJqB,EAAerB,EAAS4B,KAAKC,QAC9B,IACAC,OAAM,SAAAC,GACL,OAAOA,CACR,IACAC,SAAQ,WACPT,GAAQ,EACT,IAEI,WACLE,EAAgB5B,OACjB,CACF,GAAE,KAGD,gCACGyB,GACC,uCAEA,iCACE,2CACCF,IAAe,SAAC,IAAD,CAAYV,WAAYU,OAN9C,MAYH,C","sources":["API/movieAPI.jsx","components/ListMovies/ListMovies.styled.jsx","components/ListMovies/ListMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bad873a72299f6199f58673bb9d2d11e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async abort => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getSearchMovies = async (abort, query) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieDetails = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieCredits = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieReviews = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nmargin-left: 20px;`;\n\nexport const Item = styled.li``;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item } from './ListMovies.styled';\n\nconst ListMovies = ({ listMovies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {listMovies.map(({ id, title, name }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title ?? name}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ListMovies;\n","import { useEffect, useState } from 'react';\nimport { getTrending } from '../API/movieAPI';\nimport ListMovies from 'components/ListMovies/ListMovies';\n\nconst Home = () => {\n  const [stateMovies, setStateMovies] = useState([]);\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setload(true);\n    getTrending(abortController)\n      .then(response => {\n        setStateMovies(response.data.results);\n      })\n      .catch(error => {\n        return error;\n      })\n      .finally(() => {\n        setload(false);\n      });\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      {load ? (\n        <p>loading...</p>\n      ) : (\n        <>\n          <h1>Trending today</h1>\n          {stateMovies && <ListMovies listMovies={stateMovies} />}\n        </>\n      )}\n      ;\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","BASE_URL","getTrending","abort","axios","signal","response","getSearchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","List","styled","Item","listMovies","location","useLocation","map","title","name","to","state","from","useState","stateMovies","setStateMovies","load","setload","useEffect","abortController","AbortController","then","data","results","catch","error","finally"],"sourceRoot":""}